m4_include_once([docopt.m4])


dnl
dnl $1: The macro call (the caller is supposed to pass [$0($@)])
dnl What is also part of the API: The line
dnl ### START OF CODE GENERATED BY Argbash vx.y.z one line above ###
m4_define([ARGBASH_GO_BASE], [m4_do(
	[[$1
]],
	[dnl ASSERT_THAT_BASENAME_IS_KNOWN
],
	[m4_define([_BASENAME], m4_bpatsubst(INFERRED_BASENAME_NOERROR, [\.rst$], ))],
	[MAKE_RST_CONTENT(m4_quote(_BASENAME), _HELP_MSG, _HELP_MSG_EX)],
)])


dnl
dnl $1: date
dnl $2: program name
m4_define([_MAKE_METADATA], [[
:Author: |AUTHOR|
:Date:   $1
:Version: ]m4_ifdef([PROVIDED_VERSION_STRING], m4_quote([$2 ]PROVIDED_VERSION_STRING), [[|VERSION|]])[
:Manual section: |MAN_SECTION|
]])


m4_define([__today__], m4_dquote(m4_esyscmd_s([date +%F])))

dnl
dnl $1: Argname
dnl $2: Long + short
dnl $3: Padding of $2
dnl $4: Help (optional)
dnl $5: Default (optional)
m4_define([_FORMAT_MANPAGE_OPTION], [m4_do(
	[m4_format([[%-$3s]]m4_ifnblank([$4$5], [[[  %s.]]])m4_ifnblank([$5], [_ENDL_()[[%-$3s  %s]]])_ENDL_(2)[[%-$3s  %s]],
		[$2], _SUBSTITUTE_LF_FOR_NEWLINE_WITH_SPACE_INDENT_AND_ESCAPE_DOUBLEQUOTES([$4], m4_eval([$3] + 2)), m4_ifnblank([$5], [[ ], [[Default: $5]],]) [ ], m4_quote(|[OPTION_]m4_toupper(m4_translit([[$1]], [-], [_]))|))],
	[_ENDL_(2)],
)])


dnl
dnl $1: The current output
m4_define([_GET_DEFS_FILENAME],
	[m4_bpatsubst([$1], [$], [-defs.rst])])


dnl
dnl $1: Program name
dnl $2: Program description
dnl $3: Program description 2
m4_define([MAKE_RST_CONTENT], [m4_do(
	[[.. include:: ]_GET_DEFS_FILENAME([$1])],
	[_ENDL_(3)],
	[UNDERLINE([$1], =, =)],
	[_ENDL_(2)],
	[UNDERLINE([$2], -, -)],
	[_ENDL_()],
	[_MAKE_METADATA(__today__, [$1])],
	[_ENDL_(2)],
	[UNDERLINE([SYNOPSIS], =)],
	[_ENDL_(2)],
	[``[$1] _MAKE_HELP_SYNOPSIS()``],
	[_ENDL_(3)],
	[UNDERLINE([DESCRIPTION], =)],
	m4_ifnblank([$3], [[_ENDL_(2)],[[$3]]]),
	[_ENDL_(2)],
	[|DESCRIPTION|],
	[_ENDL_(3)],
	[UNDERLINE([ARGUMENTS], =)],
	[_ENDL_(2)],
	[MAKE_OPTIONS_SUMMARY([_FORMAT_MANPAGE_OPTION])],
)])
