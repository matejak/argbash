m4_include_once([docopt.m4])


dnl
dnl $1: The macro call (the caller is supposed to pass [$0($@)])
dnl What is also part of the API: The line
dnl ### START OF CODE GENERATED BY Argbash vx.y.z one line above ###
m4_define([ARGBASH_GO_BASE], [m4_do(
	[[$1
]],
	[dnl ASSERT_THAT_BASENAME_IS_KNOWN
],
	[m4_define([_BASENAME], INFERRED_BASENAME_NOERROR)],
	[MAKE_RST_CONTENT(m4_quote(_BASENAME), _HELP_MSG, _HELP_MSG_EX)],
)])


dnl
dnl $1: Replacement name
dnl $2, 3, ...: Replacement content
m4_define([_FORMAT_REPLACEMENT], [m4_do(
	[[.. |$1| replace::]],
	[m4_if([$#],
		2, [[ $2]_ENDL_()],
		[_ENDL_()m4_for(idx, 2, $#, 1,
			[   m4_argn(idx, $@)_ENDL_()])])],
)])


dnl
dnl $1: Argname
dnl $2: Long + short
dnl $3: Padding of $2
dnl $4: Help (optional)
dnl $5: Default (optional)
m4_define([_FORMAT_MANPAGE_OPTION], [m4_do(
	[_POSSIBLY_REPEATED_COMMENT_BLOCK([option], [], 0,
		m4_quote([..  You can have single-paragraph multi-line indented description instead of the '\']_ENDL_()))],
	[_FORMAT_REPLACEMENT([OPTION_]m4_toupper(m4_translit([[$1]], [-], [_])),
		[\])],
	[_ENDL_()],
)])


dnl
dnl $1: Program name
dnl $2: Program description
dnl $3: Program description 2
m4_define([MAKE_RST_CONTENT], [m4_do(
	[_FORMAT_REPLACEMENT([AUTHOR], [<Your name goes here>])_ENDL_()],
	[_FORMAT_REPLACEMENT([VERSION], [\])_ENDL_()],
	[_FORMAT_REPLACEMENT([MAN_SECTION], [1])_ENDL_()],
	[_FORMAT_REPLACEMENT([DESCRIPTION], [<More elaborate description], [goes here>.])_ENDL_()],
	[MAKE_OPTIONS_SUMMARY([_FORMAT_MANPAGE_OPTION])],
)])

