--- minimal-raw.m4	2020-08-01 00:01:13.050519113 +0200
+++ minimal.m4	2020-08-01 00:01:05.053955492 +0200
@@ -3,20 +3,26 @@
 # m4_ignore(
 echo "This is just a script template, not the script (yet) - pass it to 'argbash' to fix this." >&2
 exit 11  #)Created by argbash-init v@VERSION@
-# ARG_OPTIONAL_SINGLE([option])
-# ARG_OPTIONAL_BOOLEAN([print])
-# ARG_POSITIONAL_SINGLE([positional-arg])
+# ARG_OPTIONAL_SINGLE([option], o, [A option with short and long flags and default], [boo])
+# ARG_OPTIONAL_BOOLEAN([print], , [A boolean option with long flag (and implicit default: off)])
+# ARG_POSITIONAL_SINGLE([positional-arg], [Positional arg description], )
 # ARG_DEFAULTS_POS
-# ARG_HELP([<The general help message of my script>])
+# ARG_HELP([This is a minimal demo of Argbash potential])
+# ARG_VERSION([echo $0 v0.1])
+# ARGBASH_SET_INDENT([  ])
 # ARGBASH_GO
 
 # [ <-- needed because of Argbash
 
 # vvv  PLACE YOUR CODE HERE  vvv
 # For example:
-printf 'Value of --%s: %s\n' 'option' "${_arg_option}"
-printf "'%s' is %s\\n" 'print' "${_arg_print}"
-printf "Value of '%s': %s\\n" 'positional-arg' "${_arg_positional_arg}"
+if [ "${_arg_print}" = on ]
+then
+  echo "Positional arg value: '${_arg_positional_arg}'"
+  echo "Optional arg '--option' value: '${_arg_option}'"
+else
+  echo "Not telling anything, print not requested"
+fi
 
 # ^^^  TERMINATE YOUR CODE BEFORE THE BOTTOM ARGBASH MARKER  ^^^
 
